@import "../../vars";
@import "../../colorguide_vars";

.tag > .uses {
	font-weight: normal;
	font-size: .9em;
	padding: 1px 2px;
}
.tag.monospace > .uses {
	font-family: $monospace;
}
.algolia-autocomplete {
	position: relative;
	z-index: 1;

	.aa-dataset-tags {
		background: #fff;

		.tag {
			display: block;
			margin: 0;
			white-space: nowrap !important;
		}
	}
	input { font-weight: normal !important }
	.aa-suggestion .tag {
		margin: 0 !important;
		display: block !important;
	}
	&.loading {
		position:relative;

		&:after {
			content: "";
			display: block;
			position: absolute;
			top: 5px;
			// padding + border + margin
			right: 5px + 1px + 5px;

			@include loading-indicator(16px);
		}
	}
}

.tag-editor {
	display: block;
	$border: 1px;
	border: $border solid grey;
	background: #fff;
	$padding: 5px;
	padding: $padding;
	$minheight-descktop: 90px;
	@media all and (min-width: $Breakpoint) {
		min-height: $minheight-descktop;
	}
	@media all and (max-width: $Breakpoint) {
		min-height: calc(30vh - #{$padding*2} - #{$border*2});
	}

	> :not(textarea) {
		margin: 2px !important;
	}

	.addtag {
		padding: 3px 5px;
		box-sizing: border-box;
	}
	> .tag {
		&.notice-me {
			position: relative;
			z-index: 2;
			animation: flash 1s ease-in-out;

			@keyframes flash {
				from, to {
					transform: scale(1);
				}
				50% {
					transform: scale(1.5);
					color: $NRed;
					background: $NRedBG;
				}
			}
		}

		.remove {
			font-weight: bold;
			margin-left: .5em;
			cursor: pointer;

			&:before {
				content: 'x';
			}
		}
	}
	textarea {
		display: block;
		width: 100%;
		padding: $padding;
		box-sizing: border-box;
		resize: vertical;
		font-family: $monospace;
		font-size: 1em;

		@media all and (min-width: $Breakpoint) {
			min-height: $minheight-descktop;
		}
		@media all and (max-width: $Breakpoint) {
			min-height: 30vh;
		}
	}
}

@media all and (min-width: $Breakpoint) {
	#tags .button-block button {
		margin: 5px 5px 0 0;
	}
}

#pony-editor .ace_editor {
	height: 150px;

	&, * {
		font-size: 13px !important;
	}
}

#edit-tag .type-selector {
	display: flex;
	flex-flow: row wrap;
	align-content: center;
	user-select: none;

	> span { margin-bottom: 5px }

	label {
		flex: 1 1 auto;
		margin: 2px;
		position: relative;
		overflow: hidden;

		* { cursor: pointer }
	}
	input {
		position: absolute;
		top: -20px;
		left: -20px;
		width: 0;
		height: 0;

		~ .tag {
			display: block;
			height: auto;
		}
		&:not(:checked) ~ .tag { opacity: .5 }
		&:focus ~ .tag { border-style: dashed }
		&:not(:checked):focus ~ .tag { opacity: .75 }
	}
}

#cg-editor {
	overflow: hidden;

	label.major {
		> input[type="checkbox"]:not(:checked) {
			+ br, + input[type="text"] {
				display: none;
			}
		}
	}

	.clr { @extend %clr }

	.clrs.ace_editor {
		.ace_hex {
			color: $NDarkBlue;
			font-weight: bold;
		}
		.ace_colorlink {
			color: $NBlue;
			font-weight: bold;
		}
		// Commented out (deleted) color line
		.ace_comment.ace_line.ace_character {
			color: $NLavender;
			font-style: italic;
		}
		.ace_colorname { color: #006000 }
		.ace_colorid_start { color: #600090 }
		.ace_colorid { color: red }
	}
}

#cg-reorder .cgs ol {
	list-style-position: inside;
	margin: 10px 0 0;
	padding: 0;
	counter-reset: list;

	li {
		display: inline-block;
		margin: .142em;
		padding: .142em;
		@media all and (min-width: $Breakpoint){
			font-size: 14px;
		}
		@media all and (max-width: $Breakpoint){
			font-size: 18px;
		}
		color: $NBlue;
		border: 1px solid;
		border-radius: 5px;
		background: $NBlueBG;
		cursor: move;

		&.moving { box-shadow: 0 0 10px rgba(0,0,0,.5) }

		&:before {
      content: counter(list) ". ";
      counter-increment: list;
		}
	}
}

#guide-relation-editor {
	.mutual-fieldset-wrap legend {
		&:empty:before {
			content: attr(data-placeholder);
		}
	}
}

#cm-data-editor {
	text-align: center;

	.dialog-preview {
		margin: 0;
		padding: 0;

		&.loading {
			background: url('/img/loading-ring.svg') no-repeat center;
			background-size: 50%;
			padding: 10px;

			> * {
				display: none !important;
			}
		}
		&:not(.loading):empty:before {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			content: "Preview goes here";
			padding: 10px;
			font-size: 3em;
			line-height: #{268px / 3};
			opacity: .5;
			background-color: #efefef;
		}
		&:empty, &.loading {
			position: relative;
			width: 210px !important;
			height: 288px !important;
			box-sizing: border-box;
		}
		&:not(:empty):not(.loading) {
			width: auto !important;
			max-width: 100%;
			overflow-x: auto;
			white-space: nowrap;
		}

		> li {
			@include pony-cm;
			display: inline-block !important;
			margin: 0 auto 10px;

			&:not(:last-child){
				margin-right: 10px;
			}

			.preview { @include pony-cm-image(200px) }
		}
	}
	.cm-list {
		list-style: none;
		border: 0;
		padding: 0;

		> li {
			display: block;

			&:not(:last-child) {
				margin-bottom: 8px;
			}

			&.collapsed > fieldset:before {
				content: "COLLAPSED";
				display: block;
				text-align: center;
				letter-spacing: 3px;
				font-size: 20px;
				color: rgba(0,0,0,.5);
			}

			.svg-replace-preview.upload-wrap {
				width: 100px;
				height: 100px;
				margin: 0 auto;
				background: url('/img/transparency.svg') repeat;
				background-size: 16px;

				.helper:after { display: none !important }

				//noinspection CssOptimizeSimilarProperties
				> .svgcont {
					width: 100%;
					height: 100%;
					background-repeat: no-repeat;
					background-position: center;
					background-size: contain;
				}
			}

			.attrib-method-list > .attrib-method > label {
				> * {
					display: block;
				}
				span {
					margin-bottom: 5px;
				}
				input {
					width: 100%;
					box-sizing: border-box;
				}
			}

			> fieldset {
				&.ignore:after {
					display: block;
					content: "NONE";
					font-size: 1.4em;
					opacity: .5;
					letter-spacing: .1em;
				}

				.rotation-display {
					font-family: $monospace;

					&:after {
						content: "Â°";
					}
				}

				> :not(legend) {
					display: block;

					&:not(:last-child):not(legend) {
						margin-bottom: 10px;
					}

					> span {
						display: block;
						margin-bottom: 5px;
					}
					> input {
						&[type="text"], &[type="url"] {
							display: block;
							width: 100%;
							box-sizing: border-box;
						}
					}
				}
				> legend {
					text-align: left;

					> * {
						vertical-align: middle;
					}

					button {
						displaY: inline;
						margin: 0 0 0 .5em;
						padding: 1px 2px;
					}
				}
			}
		}
	}
	.rotation-display {
		font-family: $monospace;
	}
	.rotation-range {
		display: block;
		width: 95%;
		margin: 0 auto;
	}
	.issue-descriptions > * {
		margin-top: 7px !important;
		border-top: 1px solid;
		padding-top: 7px !important;
	}
}

#template-gen-form {
	.content-colors {
		display: flex;
		flex-flow: row wrap;
		width: 100%;
		padding: 0;

		> .color-replace {
			flex: 1 1 45%;
			display: flex;
			flex-flow: row nowrap;
			align-items: center;
			margin: 4px;

			&:not(:last-child) {
				margin-bottom: 5px;
			}

			> .color-input {
				flex: 0 0 70px;
				width: 70px;
				margin-right: 10px;
				font-family: $monospace;
				text-align: center;
				cursor: pointer;
			}
			> .color-label {
				flex: 1 1 auto;
				min-width: 110px;
			}
		}
	}
}

@mixin palette-responsive($squaresize: 13px, $squaremargin: 1px, $squareborder: 1px){
	.pony-color-palette {
		.colorgroup {
			margin: $squaremargin 0 0 $squaremargin;
		}
		.color {
			width: $squaresize;
			height: $squaresize;
			margin: 0 $squaremargin $squaremargin 0;

			&.selected {
				border: $squareborder solid white;

				> span {
					border: $squareborder solid black;
				}
			}
		}
	}
}
// Desktop
@media all and (min-width: $Breakpoint){
	@include palette-responsive();
}
// Mobile
@media all and (max-width: $Breakpoint){
	@include palette-responsive(24px, 3px, 2px);
}
.pony-color-palette {
	display: block;
	position: absolute;
	background: #222;
	border: 1px solid #333;
	padding: 2px;
	z-index: 22000;
	min-width: 100px;
	max-width: 255px;

	> .swatchbox {
		border: inherit;
		display: block;

		&.loading {
			@include loading-indicator(100px, 'ring');

			> * {
				display: none !important;
			}
		}

		> .error {
			margin: 6px;
			padding: 0;
			color: $NRedBG;
			font-size: 16px;
		}

		> .colorgroup {
			display: flex;
			flex-flow: row wrap;
			list-style: none;
			padding: 0;

			&:not(:first-child) {
				margin-top: 0;
			}

			> .color {
				flex: 0 0 auto;
				cursor: pointer;
				box-sizing: border-box;

				&.group-icon {
					background: url('/img/mini-folder.svg') no-repeat center;
					background-size: contain;
					cursor: help;
				}

				&.color-null > span {
					$middleWidth: 10%;
					background: linear-gradient(to bottom right, white #{50%-$middleWidth/2}, red #{50%-$middleWidth/2}, red #{50%+$middleWidth/2}, white #{50%+$middleWidth/2});
				}

				> span {
					display: block;
					width: 100%;
					height: 100%;
					font-size: 0;
					box-sizing: border-box;
				}
			}
		}
	}
}
