/*!
 * jQuery Fluidbox plugin
 * (sligthly modified to fit project's needs)
 *
 * @author Terry Mun
 * @license MIT
 * @url https://github.com/terrymun/Fluidbox
 */
// Variable
$transition-duration: .5s;
$overlay-bg-color: rgba(255,255,255,.85);
$animation-bg-color: $overlay-bg-color;

// Animation
@keyframes fluidboxLoading {
	0%   { transform: translate(-50%, -50%) rotateX(0deg)    rotateY(0deg)    }
	50%  { transform: translate(-50%, -50%) rotateX(-180deg) rotateY(0deg)    }
	100% { transform: translate(-50%, -50%) rotateX(-180deg) rotateY(-180deg) }
}

// Rules
.fluidbox { outline: none }
.fluidbox__overlay {
	background-color: $overlay-bg-color;
	cursor: zoom-out;
	opacity: 0;
	pointer-events: none;
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	transition: all $transition-duration ease-in-out;

	.fluidbox--opened & { pointer-events: auto }
}
.fluidbox__wrap {
	background-position: center center;
	background-size: cover;
	margin: 0 auto;
	position: relative;
	transition: all $transition-duration ease-in-out;
}
.fluidbox__thumb {
	transition: opacity 0s ease-in-out 0s;

	.fluidbox--closed & { transition: opacity 0s ease-in-out 0s }
}
//noinspection CssOptimizeSimilarProperties
.fluidbox__ghost {
	background-size: 100% 100%;
	background-position: center center;
	background-repeat: no-repeat;
	position: absolute;
	transition: opacity 0s 0s, transform $transition-duration 0s;

	.fluidbox--opened & { cursor: zoom-out }
	.fluidbox--closed & {
		transition: opacity 0s $transition-duration, transform $transition-duration 0s;
	}
}
.fluidbox__loader {
	perspective: 200px;
	opacity: 0;
	pointer-events: none;
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;

	&::before {
		background-color: $animation-bg-color;
		content: '';
		transform-style: preserve-3d;
		position: absolute;
		top: 50%;
		left: 50%;
		width: 20%;
		padding-bottom: 20%;
		transform: translate(-50%, -50%);
		transition: transform $transition-duration 0s;
	}
}

.fluidbox--loading .fluidbox__loader {
	opacity: 1;
	transition: opacity $transition-duration ease-in-out $transition-duration;

	&::before {
		animation: fluidboxLoading 1s 0s infinite ease-in-out forwards;
	}
}
